version: 0.2

phases:
  build:
    commands:
      - apt-get install unzip
      - wget https://releases.hashicorp.com/terraform/1.0.0/terraform_1.0.0_linux_amd64.zip
      - unzip terraform_1.0.0_linux_amd64.zip
      - mv ./terraform /usr/local/bin/
      - python3 -m ensurepip
      - pip3 install --no-cache --upgrade pip setuptools
      - pip3 install awscli
      - CREDENTIALS=$(aws sts assume-role --role-arn arn:aws:iam::033812576448:role/service-role/codebuild-insearch-finals-service-role --role-session-name build --duration-seconds 900)
      - echo $CREDENTIALS
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      - terraform init -input=false -backend-config=environment/dev/s3-bucket.tfvars
      - terraform plan -out dev-plan.tfplan -var-file=environment/dev/variables.tfvars -input=false
      - terraform apply "dev-plan.tfplan"
      # - aws s3 cp $CI_ENVIRONMENT_NAME-plan.tfplan s3://clixtream-infra-state-bucket/infra/
  # build:
  #   commands:
  #     - terraform init  
#   post_build:
#     commands:
#       - echo Build completed on `date`
#       - mvn package
# artifacts:
#   files:
#     - target/my-app-1.0-SNAPSHOT.jar
#     - appspec.yml
#   discard-paths: yes
